name: 'Infrastructure'
on:
  # =================================================================
  # Runs when user stars the project
  # TODO: change this to something more manageable
  watch:
    types: [started]

# =================================================================
# Initialize environment.
# Referenced secrets should be configured before running this step.
# =================================================================
env:
  # Project specific
  GCP_PROJECT        : demblock-prod
  TF_VAR_GKE_CLUSTER : eu-demblock-cluster
  TF_VAR_GKE_REGION  : europe-west1
  TF_VAR_GKE_ZONE    : europe-west1-b
  TF_VAR_DB_INSTANCE : eu-db-demblock
  TF_VAR_DB_LOCATION : europe-west1
  TF_VAR_SQL_USER    : ${{ secrets.DB_USERNAME }}
  TF_VAR_SQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DOCKER_PASSWORD    : ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_CONFIG_JSON : ${{ secrets.DOCKER_CONFIG_JSON }}

  # User specific
  GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}
  
  # ====================
  # REQUIRED
  DB_USERNAME  : ${{ secrets.DB_USERNAME }}
  DB_PASSWORD  : ${{ secrets.DB_PASSWORD }}
  SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  # DB_USERNAME
  # DB_PASSWORD
  # SMTP_USERNAME
  # SMTP_PASSWORD

jobs:
  # =================================================================
  # Deploy required infrastructure.
  # =================================================================
  terraform:
    name: 'Terraform deploy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Auth Google Services
      - name: 'Infra - GCP Auth'
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GOOGLE_SA_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SA_KEY }}
          export_default_credentials: true

      # Validate infrastructure code
      - name: 'Infra - Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './infrastructure'

      # Deploy infrastructure via Terraform
      - name: 'Infra - Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './infrastructure'
  
      - name: 'Infra - Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './infrastructure'

      # Update K8S infra
      - name: Infra - Deploy K8S
        run: |-
          gcloud config set project $GCP_PROJECT
          gcloud container clusters get-credentials "$TF_VAR_GKE_CLUSTER" --zone "$TF_VAR_GKE_ZONE"
          kubectl apply -f ./infrastructure/gke/volumes.yaml
  
  # =================================================================
  # Create required infrastructure dependencies.
  # =================================================================
  k8s:
    name: 'Kubernetes management'
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@master

      # Auth Google Services
      - name: 'K8S - GCP Auth'
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GOOGLE_SA_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SA_KEY }}
          export_default_credentials: true

      # Update SQL references
      - name: K8S - Auth
        run: |-
          gcloud config set project $GCP_PROJECT
          gcloud container clusters get-credentials "$TF_VAR_GKE_CLUSTER" --zone "$TF_VAR_GKE_ZONE"

      - name: K8S - Autoscaling
        run: |-
          gcloud container clusters update "$TF_VAR_GKE_CLUSTER" --enable-autoscaling \
            --min-nodes 1 --max-nodes 2 --zone "$TF_VAR_GKE_ZONE" --node-pool default-pool

      - name: K8S - Obtain SQL IP
        run: |
          sql_ip=$(gcloud sql instances describe $TF_VAR_DB_INSTANCE --format json | jq '.ipAddresses[0].ipAddress' | tr -d '"')
          echo ::set-env name=DB_HOST::$sql_ip
  
      - name: PostInfra - Update SQL refs
        uses: google/secrets-sync-action@v1.1.3
        with: 
          SECRETS: |
            ^DB_HOST$
            ^DOCKER_PASSWORD$
            ^GKE_CLUSTER$
            ^GKE_ZONE$
          REPOSITORIES: |
             ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}
        env:
          GKE_CLUSTER: ${{ env.TF_VAR_GKE_CLUSTER }}
          GKE_ZONE: ${{ env.TF_VAR_GKE_ZONE }}

      # Deploy required secrets
      - name: K8S - Deploy k8s secrets
        run: |-
          ./k8s/secrets.sh

      # Deploy required dependencies
      - name: K8S - Deploy k8s dependencies
        run: |-
          ./k8s/k8s_dep.sh

      # Bump tag
      - name: K8S - Bump and tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          WITH_V: true
