name: 'Infrastructure - Deploy'
on:
  watch:
    types: [started]

env:
  GCP_PROJECT: demblock
  TF_VAR_SQL_USER: ${{ secrets.DB_USERNAME }}
  TF_VAR_SQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_CONFIG_JSON: ${{ secrets.DOCKER_CONFIG_JSON }}
  TF_VAR_GKE_CLUSTER: eu-demblock-cluster
  TF_VAR_GKE_ZONE: europe-north1-a
  TF_VAR_DB_INSTANCE: eu-demblock-db
  TF_VAR_DB_LOCATION: europe-north1
  
jobs:
  terraform:
    name: 'Infra - Deploy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Auth Google Services
      - name: 'GCP - Project Auth'
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GOOGLE_SA_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SA_KEY }}
          export_default_credentials: true

      # Deploy infrastructure via Terraform
      - name: 'Infra - Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './infrastructure'

      - name: 'Infra - Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './infrastructure'

      # The infrastructure is ready, perform additional steps.
      # Update SQL references      
      - name: PostInfra - Kubernetes Auth
        run: |-
          gcloud config set project $GCP_PROJECT
          gcloud container clusters get-credentials "$TF_VAR_GKE_CLUSTER" --zone "$TF_VAR_GKE_ZONE"

      - name: PostInfra - Create K8s docker pull secret
        run: |-
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: pull-docker-creds
          data:
            .dockerconfigjson: $DOCKER_CONFIG_JSON
          type: kubernetes.io/dockerconfigjson
          EOF

      - name: PostInfra - Get SQL IP
        run: |
          sql_ip=$(gcloud sql instances describe $TF_VAR_DB_INSTANCE --format json | jq '.ipAddresses[0].ipAddress' | tr -d '"')
          echo ::set-env name=DB_HOST::$sql_ip
  
      - name: PostInfra - Update SQL refs
        uses: google/secrets-sync-action@v1.1.3
        with: 
          SECRETS: |
            ^DB_USERNAME$
            ^DB_PASSWORD$
            ^DB_HOST$
            ^DOCKER_PASSWORD$
            ^GKE_CLUSTER$
            ^GKE_ZONE$
          REPOSITORIES: |
             ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS_TOKEN }}
        env:
          GKE_CLUSTER: $TF_VAR_GKE_CLUSTER
          GKE_ZONE: $TF_VAR_GKE_ZONE

      # Install charts
      - name: Helm - Install dependency
        run: |
          curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      # Deploy cert manager
      - name: Helm - Deploy cert manager
        run: |
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.14.1/cert-manager-legacy.crds.yaml
          kubectl create namespace cert-manager || echo "Namespace exists."
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm upgrade cert-manager --install --wait --atomic --namespace cert-manager jetstack/cert-manager --version v0.14.1
          kubectl apply -f ./k8s/prod-cm.yaml

      # Bump tag
      - name: Finally - Bump and tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          WITH_V: true
